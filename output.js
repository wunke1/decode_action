//Tue Jul 22 2025 12:24:06 GMT+0000 (Coordinated Universal Time)
//Base:<url id="cv1cref6o68qmpt26ol0" type="url" status="parsed" title="GitHub - echo094/decode-js: JS混淆代码的AST分析工具 AST analysis tool for obfuscated JS code" wc="2165">https://github.com/echo094/decode-js</url>
//Modify:<url id="cv1cref6o68qmpt26olg" type="url" status="parsed" title="GitHub - smallfawn/decode_action: 世界上本来不存在加密，加密的人多了，也便成就了解密" wc="741">https://github.com/smallfawn/decode_action</url>
(function () {})();
function newpass(_0x240aa9) {
  var _0x38dec1 = Array(),
    _0x3ff018,
    _0x4772f6,
    _0x38fbfb,
    _0x3c042f,
    _0x196075,
    _0x58bffe,
    _0x5c3b58,
    _0x136fe0,
    _0x30c554,
    _0x4f4f47 = 7,
    _0x5e2ac8 = 12,
    _0x5855ff = 17,
    _0x454928 = 22,
    _0x5849b8 = 5,
    _0x393345 = 9,
    _0x5f4ede = 14,
    _0x57d89f = 20,
    _0x370909 = 4,
    _0x1280c0 = 11,
    _0x27ca2c = 16,
    _0x26ca5a = 23,
    _0x1c4860 = 6,
    _0x50ad23 = 10,
    _0x3a1806 = 15,
    _0xa39b30 = 21;
  _0x240aa9 = Utf8Encode(_0x240aa9);
  _0x38dec1 = ConvertToWordArray(_0x240aa9);
  _0x58bffe = 1732584193;
  _0x5c3b58 = 4023233417;
  _0x136fe0 = 2562383102;
  _0x30c554 = 271733878;
  for (_0x3ff018 = 0; _0x3ff018 < _0x38dec1.length; _0x3ff018 += 16) {
    _0x4772f6 = _0x58bffe;
    _0x38fbfb = _0x5c3b58;
    _0x3c042f = _0x136fe0;
    _0x196075 = _0x30c554;
    _0x58bffe = FF(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 0], _0x4f4f47, 3614090104);
    _0x30c554 = FF(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 1], _0x5e2ac8, 3905402710);
    _0x136fe0 = FF(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 2], _0x5855ff, 606105819);
    _0x5c3b58 = FF(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 3], _0x454928, 3250441966);
    _0x58bffe = FF(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 4], _0x4f4f47, 4118548399);
    _0x30c554 = FF(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 5], _0x5e2ac8, 1200080426);
    _0x136fe0 = FF(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 6], _0x5855ff, 2821735955);
    _0x5c3b58 = FF(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 7], _0x454928, 4249261313);
    _0x58bffe = FF(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 8], _0x4f4f47, 1770035416);
    _0x30c554 = FF(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 9], _0x5e2ac8, 2336552879);
    _0x136fe0 = FF(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 10], _0x5855ff, 4294925233);
    _0x5c3b58 = FF(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 11], _0x454928, 2304563134);
    _0x58bffe = FF(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 12], _0x4f4f47, 1804603682);
    _0x30c554 = FF(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 13], _0x5e2ac8, 4254626195);
    _0x136fe0 = FF(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 14], _0x5855ff, 2792965006);
    _0x5c3b58 = FF(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 15], _0x454928, 1236535329);
    _0x58bffe = GG(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 1], _0x5849b8, 4129170786);
    _0x30c554 = GG(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 6], _0x393345, 3225465664);
    _0x136fe0 = GG(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 11], _0x5f4ede, 643717713);
    _0x5c3b58 = GG(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 0], _0x57d89f, 3921069994);
    _0x58bffe = GG(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 5], _0x5849b8, 3593408605);
    _0x30c554 = GG(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 10], _0x393345, 38016083);
    _0x136fe0 = GG(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 15], _0x5f4ede, 3634488961);
    _0x5c3b58 = GG(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 4], _0x57d89f, 3889429448);
    _0x58bffe = GG(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 9], _0x5849b8, 568446438);
    _0x30c554 = GG(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 14], _0x393345, 3275163606);
    _0x136fe0 = GG(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 3], _0x5f4ede, 4107603335);
    _0x5c3b58 = GG(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 8], _0x57d89f, 1163556077);
    _0x58bffe = GG(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 13], _0x5849b8, 2850285829);
    _0x30c554 = GG(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 2], _0x393345, 4243563512);
    _0x136fe0 = GG(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 7], _0x5f4ede, 1735328473);
    _0x5c3b58 = GG(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 12], _0x57d89f, 2368359562);
    _0x58bffe = HH(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 5], _0x370909, 4294588738);
    _0x30c554 = HH(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 8], _0x1280c0, 2272392833);
    _0x136fe0 = HH(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 11], _0x27ca2c, 1839030562);
    _0x5c3b58 = HH(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 14], _0x26ca5a, 4259657740);
    _0x58bffe = HH(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 1], _0x370909, 2763975236);
    _0x30c554 = HH(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 4], _0x1280c0, 1272893353);
    _0x136fe0 = HH(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 7], _0x27ca2c, 4139469664);
    _0x5c3b58 = HH(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 10], _0x26ca5a, 3200236656);
    _0x58bffe = HH(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 13], _0x370909, 681279174);
    _0x30c554 = HH(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 0], _0x1280c0, 3936430074);
    _0x136fe0 = HH(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 3], _0x27ca2c, 3572445317);
    _0x5c3b58 = HH(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 6], _0x26ca5a, 76029189);
    _0x58bffe = HH(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 9], _0x370909, 3654602809);
    _0x30c554 = HH(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 12], _0x1280c0, 3873151461);
    _0x136fe0 = HH(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 15], _0x27ca2c, 530742520);
    _0x5c3b58 = HH(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 2], _0x26ca5a, 3299628645);
    _0x58bffe = II(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 0], _0x1c4860, 4096336452);
    _0x30c554 = II(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 7], _0x50ad23, 1126891415);
    _0x136fe0 = II(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 14], _0x3a1806, 2878612391);
    _0x5c3b58 = II(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 5], _0xa39b30, 4237533241);
    _0x58bffe = II(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 12], _0x1c4860, 1700485571);
    _0x30c554 = II(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 3], _0x50ad23, 2399980690);
    _0x136fe0 = II(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 10], _0x3a1806, 4293915773);
    _0x5c3b58 = II(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 1], _0xa39b30, 2240044497);
    _0x58bffe = II(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 8], _0x1c4860, 1873313359);
    _0x30c554 = II(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 15], _0x50ad23, 4264355552);
    _0x136fe0 = II(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 6], _0x3a1806, 2734768916);
    _0x5c3b58 = II(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 13], _0xa39b30, 1309151649);
    _0x58bffe = II(_0x58bffe, _0x5c3b58, _0x136fe0, _0x30c554, _0x38dec1[_0x3ff018 + 4], _0x1c4860, 4149444226);
    _0x30c554 = II(_0x30c554, _0x58bffe, _0x5c3b58, _0x136fe0, _0x38dec1[_0x3ff018 + 11], _0x50ad23, 3174756917);
    _0x136fe0 = II(_0x136fe0, _0x30c554, _0x58bffe, _0x5c3b58, _0x38dec1[_0x3ff018 + 2], _0x3a1806, 718787259);
    _0x5c3b58 = II(_0x5c3b58, _0x136fe0, _0x30c554, _0x58bffe, _0x38dec1[_0x3ff018 + 9], _0xa39b30, 3951483185);
    _0x58bffe = AddUnsigned(_0x58bffe, _0x4772f6);
    _0x5c3b58 = AddUnsigned(_0x5c3b58, _0x38fbfb);
    _0x136fe0 = AddUnsigned(_0x136fe0, _0x3c042f);
    _0x30c554 = AddUnsigned(_0x30c554, _0x196075);
  }
  var _0x5b1163 = WordToHex(_0x58bffe) + WordToHex(_0x5c3b58) + WordToHex(_0x136fe0) + WordToHex(_0x30c554);
  return _0x5b1163.toLowerCase();
}
function RotateLeft(_0x3ee0f5, _0x74f5b2) {
  return _0x3ee0f5 << _0x74f5b2 | _0x3ee0f5 >>> 32 - _0x74f5b2;
}
function AddUnsigned(_0x240d11, _0x442f87) {
  var _0x57cf82, _0x398d51, _0x49565c, _0x95eb57, _0x174dca;
  _0x49565c = _0x240d11 & 2147483648;
  _0x95eb57 = _0x442f87 & 2147483648;
  _0x57cf82 = _0x240d11 & 1073741824;
  _0x398d51 = _0x442f87 & 1073741824;
  _0x174dca = (_0x240d11 & 1073741823) + (_0x442f87 & 1073741823);
  if (_0x57cf82 & _0x398d51) return _0x174dca ^ 2147483648 ^ _0x49565c ^ _0x95eb57;
  if (_0x57cf82 | _0x398d51) return _0x174dca & 1073741824 ? _0x174dca ^ 3221225472 ^ _0x49565c ^ _0x95eb57 : _0x174dca ^ 1073741824 ^ _0x49565c ^ _0x95eb57;else {
    return _0x174dca ^ _0x49565c ^ _0x95eb57;
  }
}
function F(_0x5a53e4, _0x67c6ef, _0x5d7a5f) {
  return _0x5a53e4 & _0x67c6ef | ~_0x5a53e4 & _0x5d7a5f;
}
function G(_0xa0752a, _0x30446f, _0x4e3811) {
  return _0xa0752a & _0x4e3811 | _0x30446f & ~_0x4e3811;
}
function H(_0x2b4cf5, _0x42bb47, _0x3e5f79) {
  return _0x2b4cf5 ^ _0x42bb47 ^ _0x3e5f79;
}
function I(_0x3b4a49, _0x373183, _0x2e7a57) {
  return _0x373183 ^ (_0x3b4a49 | ~_0x2e7a57);
}
function FF(_0x227241, _0x2b0920, _0x1ea1ff, _0x1c82a0, _0x13696d, _0x2dda39, _0x752064) {
  _0x227241 = AddUnsigned(_0x227241, AddUnsigned(AddUnsigned(F(_0x2b0920, _0x1ea1ff, _0x1c82a0), _0x13696d), _0x752064));
  return AddUnsigned(RotateLeft(_0x227241, _0x2dda39), _0x2b0920);
}
function GG(_0x4c3b25, _0x14afa7, _0x111550, _0x4f2963, _0x2b542f, _0x447001, _0x3149d8) {
  _0x4c3b25 = AddUnsigned(_0x4c3b25, AddUnsigned(AddUnsigned(G(_0x14afa7, _0x111550, _0x4f2963), _0x2b542f), _0x3149d8));
  return AddUnsigned(RotateLeft(_0x4c3b25, _0x447001), _0x14afa7);
}
function HH(_0x470fe4, _0x192fac, _0x5689a5, _0x119a60, _0xe1afeb, _0x14c166, _0x57d384) {
  _0x470fe4 = AddUnsigned(_0x470fe4, AddUnsigned(AddUnsigned(H(_0x192fac, _0x5689a5, _0x119a60), _0xe1afeb), _0x57d384));
  return AddUnsigned(RotateLeft(_0x470fe4, _0x14c166), _0x192fac);
}
function II(_0x155fc9, _0x586c3f, _0x19a03e, _0x110c33, _0x3641e4, _0x20c7a8, _0x113c18) {
  _0x155fc9 = AddUnsigned(_0x155fc9, AddUnsigned(AddUnsigned(I(_0x586c3f, _0x19a03e, _0x110c33), _0x3641e4), _0x113c18));
  return AddUnsigned(RotateLeft(_0x155fc9, _0x20c7a8), _0x586c3f);
}
function ConvertToWordArray(_0x4facae) {
  var _0xcede60;
  var _0x4242ab = _0x4facae.length;
  var _0x1092c1 = _0x4242ab + 8;
  var _0xe05ab4 = (_0x1092c1 - _0x1092c1 % 64) / 64;
  var _0x17d01e = (_0xe05ab4 + 1) * 16;
  var _0x2b0eb4 = Array(_0x17d01e - 1);
  var _0x12243f = 0;
  var _0x4ba9cd = 0;
  while (_0x4ba9cd < _0x4242ab) {
    _0xcede60 = (_0x4ba9cd - _0x4ba9cd % 4) / 4;
    _0x12243f = _0x4ba9cd % 4 * 8;
    _0x2b0eb4[_0xcede60] = _0x2b0eb4[_0xcede60] | _0x4facae.charCodeAt(_0x4ba9cd) << _0x12243f;
    _0x4ba9cd++;
  }
  _0xcede60 = (_0x4ba9cd - _0x4ba9cd % 4) / 4;
  _0x12243f = _0x4ba9cd % 4 * 8;
  _0x2b0eb4[_0xcede60] = _0x2b0eb4[_0xcede60] | 128 << _0x12243f;
  _0x2b0eb4[_0x17d01e - 2] = _0x4242ab << 3;
  _0x2b0eb4[_0x17d01e - 1] = _0x4242ab >>> 29;
  return _0x2b0eb4;
}
function WordToHex(_0x5c94a1) {
  var _0x15adf4 = "",
    _0x4669c5 = "",
    _0x10e5e1,
    _0x61a765;
  for (_0x61a765 = 0; _0x61a765 <= 3; _0x61a765++) {
    _0x10e5e1 = _0x5c94a1 >>> _0x61a765 * 8 & 255;
    _0x4669c5 = "0" + _0x10e5e1.toString(16);
    _0x15adf4 = _0x15adf4 + _0x4669c5.substr(_0x4669c5.length - 2, 2);
  }
  return _0x15adf4;
}
function Utf8Encode(_0x5ee5b4) {
  var _0x2d1eac = "";
  for (var _0x32bd65 = 0; _0x32bd65 < _0x5ee5b4.length; _0x32bd65++) {
    {
      var _0x41b737 = _0x5ee5b4.charCodeAt(_0x32bd65);
      if (_0x41b737 < 128) _0x2d1eac += String.fromCharCode(_0x41b737);else _0x41b737 > 127 && _0x41b737 < 2048 ? (_0x2d1eac += String.fromCharCode(_0x41b737 >> 6 | 192), _0x2d1eac += String.fromCharCode(_0x41b737 & 63 | 128)) : (_0x2d1eac += String.fromCharCode(_0x41b737 >> 12 | 224), _0x2d1eac += String.fromCharCode(_0x41b737 >> 6 & 63 | 128), _0x2d1eac += String.fromCharCode(_0x41b737 & 63 | 128));
    }
  }
  return _0x2d1eac;
}